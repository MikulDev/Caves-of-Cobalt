/*
 *    MCreator note:
 *
 *    This file is autogenerated to connect all MCreator mod elements together.
 *
 */
package net.mcreator.coc;

import net.minecraftforge.forgespi.language.ModFileScanData;
import net.minecraftforge.fml.network.NetworkEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.ModList;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.biome.Biome;
import net.minecraft.util.ResourceLocation;
import net.minecraft.tags.Tag;
import net.minecraft.network.PacketBuffer;
import net.minecraft.item.Item;
import net.minecraft.entity.EntityType;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.block.Block;

import java.util.function.Supplier;
import java.util.function.Function;
import java.util.function.BiConsumer;
import java.util.Set;
import java.util.Map;
import java.util.List;
import java.util.HashMap;
import java.util.Collections;
import java.util.ArrayList;

import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Retention;

public class CocModElements {
	public final List<ModElement> elements = new ArrayList<>();
	public final List<Supplier<Block>> blocks = new ArrayList<>();
	public final List<Supplier<Item>> items = new ArrayList<>();
	public final List<Supplier<Biome>> biomes = new ArrayList<>();
	public final List<Supplier<EntityType<?>>> entities = new ArrayList<>();
	public final List<Supplier<Enchantment>> enchantments = new ArrayList<>();
	public static Map<ResourceLocation, net.minecraft.util.SoundEvent> sounds = new HashMap<>();
	public CocModElements() {
		sounds.put(new ResourceLocation("coc", "item.malachite_skippers.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.malachite_skippers.use")));
		sounds.put(new ResourceLocation("coc", "item.projection_tome.arrow"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.projection_tome.arrow")));
		sounds.put(new ResourceLocation("coc", "item.projection_tome.cast"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.projection_tome.cast")));
		sounds.put(new ResourceLocation("coc", "item.projection_tome.explode"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.projection_tome.explode")));
		sounds.put(new ResourceLocation("coc", "ambient.wind"), new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "ambient.wind")));
		sounds.put(new ResourceLocation("coc", "item.ancient_horn.respond"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.ancient_horn.respond")));
		sounds.put(new ResourceLocation("coc", "item.ancient_horn.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.ancient_horn.use")));
		sounds.put(new ResourceLocation("coc", "block.ancient_chest.land"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.ancient_chest.land")));
		sounds.put(new ResourceLocation("coc", "block.ancient_chest.ambient"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.ancient_chest.ambient")));
		sounds.put(new ResourceLocation("coc", "block.crate.break"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.crate.break")));
		sounds.put(new ResourceLocation("coc", "block.geyser_normal.power"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.geyser_normal.power")));
		sounds.put(new ResourceLocation("coc", "block.geyser_underwater.gush"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.geyser_underwater.gush")));
		sounds.put(new ResourceLocation("coc", "entity.blueshroom.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.blueshroom.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.blueshroom.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.blueshroom.idle")));
		sounds.put(new ResourceLocation("coc", "item.chipper.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.chipper.use")));
		sounds.put(new ResourceLocation("coc", "item.chipper.break"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.chipper.break")));
		sounds.put(new ResourceLocation("coc", "block.crystal.chime"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.crystal.chime")));
		sounds.put(new ResourceLocation("coc", "item.soul_dagger.leech"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.soul_dagger.leech")));
		sounds.put(new ResourceLocation("coc", "item.soul_dagger.whirlwind"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.soul_dagger.whirlwind")));
		sounds.put(new ResourceLocation("coc", "block.ice_chest.open"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.ice_chest.open")));
		sounds.put(new ResourceLocation("coc", "entity.magmaw.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.magmaw.death")));
		sounds.put(new ResourceLocation("coc", "entity.magmaw.bite"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.magmaw.bite")));
		sounds.put(new ResourceLocation("coc", "entity.magmaw.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.magmaw.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.magmaw.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.magmaw.idle")));
		sounds.put(new ResourceLocation("coc", "entity.magmaw.shoot"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.magmaw.shoot")));
		sounds.put(new ResourceLocation("coc", "block.melting_pot.radiant"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.melting_pot.radiant")));
		sounds.put(new ResourceLocation("coc", "block.melting_pot.dragon_yolk"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.melting_pot.dragon_yolk")));
		sounds.put(new ResourceLocation("coc", "block.melting_pot.hot_plate"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.melting_pot.hot_plate")));
		sounds.put(new ResourceLocation("coc", "block.infusion_table.dagger"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.infusion_table.dagger")));
		sounds.put(new ResourceLocation("coc", "block.infusion_table.tome"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.infusion_table.tome")));
		sounds.put(new ResourceLocation("coc", "music.molten"), new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "music.molten")));
		sounds.put(new ResourceLocation("coc", "music.mushrooms"), new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "music.mushrooms")));
		sounds.put(new ResourceLocation("coc", "effect.spores.damage"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "effect.spores.damage")));
		sounds.put(new ResourceLocation("coc", "effect.spores.apply"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "effect.spores.apply")));
		sounds.put(new ResourceLocation("coc", "entity.monarch.attack"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.monarch.attack")));
		sounds.put(new ResourceLocation("coc", "entity.monarch.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.monarch.death")));
		sounds.put(new ResourceLocation("coc", "entity.monarch.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.monarch.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.monarch.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.monarch.idle")));
		sounds.put(new ResourceLocation("coc", "entity.monarch.summon"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.monarch.summon")));
		sounds.put(new ResourceLocation("coc", "entity.rotted_zombie.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.rotted_zombie.death")));
		sounds.put(new ResourceLocation("coc", "entity.rotted_zombie.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.rotted_zombie.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.rotted_zombie.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.rotted_zombie.idle")));
		sounds.put(new ResourceLocation("coc", "entity.scoria.appear"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.scoria.appear")));
		sounds.put(new ResourceLocation("coc", "entity.scoria.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.scoria.death")));
		sounds.put(new ResourceLocation("coc", "entity.scoria.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.scoria.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.stalagmite.appear"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.stalagmite.appear")));
		sounds.put(new ResourceLocation("coc", "entity.stalagmite.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.stalagmite.death")));
		sounds.put(new ResourceLocation("coc", "entity.stalagmite.disappear"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.stalagmite.disappear")));
		sounds.put(new ResourceLocation("coc", "entity.stalagmite.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.stalagmite.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.tunnelbug.dig"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.tunnelbug.dig")));
		sounds.put(new ResourceLocation("coc", "entity.tunnelbug.rocks"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.tunnelbug.rocks")));
		sounds.put(new ResourceLocation("coc", "entity.tunnelbug.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.tunnelbug.death")));
		sounds.put(new ResourceLocation("coc", "entity.tunnelbug.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.tunnelbug.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.watcher.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.watcher.death")));
		sounds.put(new ResourceLocation("coc", "entity.watcher.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.watcher.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.watcher.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.watcher.idle")));
		sounds.put(new ResourceLocation("coc", "entity.watcher.snort"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.watcher.snort")));
		sounds.put(new ResourceLocation("coc", "entity.watcher.spit"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.watcher.spit")));
		sounds.put(new ResourceLocation("coc", "item.dagger.grab"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.dagger.grab")));
		sounds.put(new ResourceLocation("coc", "item.dagger.return"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.dagger.return")));
		sounds.put(new ResourceLocation("coc", "item.dagger.slap"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.dagger.slap")));
		sounds.put(new ResourceLocation("coc", "item.malachite_sword.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.malachite_sword.use")));
		sounds.put(new ResourceLocation("coc", "item.malachite_leggings.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.malachite_leggings.use")));
		sounds.put(new ResourceLocation("coc", "item.radiant_sword.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.radiant_sword.use")));
		sounds.put(new ResourceLocation("coc", "item.radaint_leggings.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.radaint_leggings.use")));
		sounds.put(new ResourceLocation("coc", "item.soul_dagger.throw"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.soul_dagger.throw")));
		sounds.put(new ResourceLocation("coc", "item.dagger.throw"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.dagger.throw")));
		sounds.put(new ResourceLocation("coc", "item.phoenix_wings.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.phoenix_wings.use")));
		sounds.put(new ResourceLocation("coc", "item.mitigator.deplete"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.mitigator.deplete")));
		sounds.put(new ResourceLocation("coc", "item.mitigator.recharge"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.mitigator.recharge")));
		sounds.put(new ResourceLocation("coc", "block.pivoter.turn"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.pivoter.turn")));
		sounds.put(new ResourceLocation("coc", "block.ancient_chest.open"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.ancient_chest.open")));
		sounds.put(new ResourceLocation("coc", "block.geyser_normal.gush"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.geyser_normal.gush")));
		sounds.put(new ResourceLocation("coc", "block.geyser_lava.gush"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "block.geyser_lava.gush")));
		sounds.put(new ResourceLocation("coc", "entity.stalagmite.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.stalagmite.idle")));
		sounds.put(new ResourceLocation("coc", "entity.tunnelbug.flop"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.tunnelbug.flop")));
		sounds.put(new ResourceLocation("coc", "item.malachite_axe.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.malachite_axe.use")));
		sounds.put(new ResourceLocation("coc", "enchantment.soulrift"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "enchantment.soulrift")));
		sounds.put(new ResourceLocation("coc", "crafting.socket_gem"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "crafting.socket_gem")));
		sounds.put(new ResourceLocation("coc", "item.malachite_axe.use_stereo"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.malachite_axe.use_stereo")));
		sounds.put(new ResourceLocation("coc", "item.malachite_axe.slam"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.malachite_axe.slam")));
		sounds.put(new ResourceLocation("coc", "entity.wanderwart.hurt"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.wanderwart.hurt")));
		sounds.put(new ResourceLocation("coc", "entity.wanderwart.death"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.wanderwart.death")));
		sounds.put(new ResourceLocation("coc", "entity.wanderwart.idle"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.wanderwart.idle")));
		sounds.put(new ResourceLocation("coc", "entity.wanderwart.burst"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "entity.wanderwart.burst")));
		sounds.put(new ResourceLocation("coc", "item.radiant_helmet.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.radiant_helmet.use")));
		sounds.put(new ResourceLocation("coc", "item.radiant_axe.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.radiant_axe.use")));
		sounds.put(new ResourceLocation("coc", "item.raidant_chestplate.recharge"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.raidant_chestplate.recharge")));
		sounds.put(new ResourceLocation("coc", "item.radiant_chestplate.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.radiant_chestplate.use")));
		sounds.put(new ResourceLocation("coc", "items.radiant_chestplate.use"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "items.radiant_chestplate.use")));
		sounds.put(new ResourceLocation("coc", "item.spore_sac.land"),
				new net.minecraft.util.SoundEvent(new ResourceLocation("coc", "item.spore_sac.land")));
		try {
			ModFileScanData modFileInfo = ModList.get().getModFileById("coc").getFile().getScanResult();
			Set<ModFileScanData.AnnotationData> annotations = modFileInfo.getAnnotations();
			for (ModFileScanData.AnnotationData annotationData : annotations) {
				if (annotationData.getAnnotationType().getClassName().equals(ModElement.Tag.class.getName())) {
					Class<?> clazz = Class.forName(annotationData.getClassType().getClassName());
					if (clazz.getSuperclass() == CocModElements.ModElement.class)
						elements.add((CocModElements.ModElement) clazz.getConstructor(this.getClass()).newInstance(this));
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		Collections.sort(elements);
		elements.forEach(CocModElements.ModElement::initElements);
		MinecraftForge.EVENT_BUS.register(new CocModVariables(this));
	}

	public void registerSounds(RegistryEvent.Register<net.minecraft.util.SoundEvent> event) {
		for (Map.Entry<ResourceLocation, net.minecraft.util.SoundEvent> sound : sounds.entrySet())
			event.getRegistry().register(sound.getValue().setRegistryName(sound.getKey()));
	}
	private int messageID = 0;
	public <T> void addNetworkMessage(Class<T> messageType, BiConsumer<T, PacketBuffer> encoder, Function<PacketBuffer, T> decoder,
			BiConsumer<T, Supplier<NetworkEvent.Context>> messageConsumer) {
		CocMod.PACKET_HANDLER.registerMessage(messageID, messageType, encoder, decoder, messageConsumer);
		messageID++;
	}

	public List<ModElement> getElements() {
		return elements;
	}

	public List<Supplier<Block>> getBlocks() {
		return blocks;
	}

	public List<Supplier<Item>> getItems() {
		return items;
	}

	public List<Supplier<Biome>> getBiomes() {
		return biomes;
	}

	public List<Supplier<EntityType<?>>> getEntities() {
		return entities;
	}

	public List<Supplier<Enchantment>> getEnchantments() {
		return enchantments;
	}
	public static class ModElement implements Comparable<ModElement> {
		@Retention(RetentionPolicy.RUNTIME)
		public @interface Tag {
		}
		protected final CocModElements elements;
		protected final int sortid;
		public ModElement(CocModElements elements, int sortid) {
			this.elements = elements;
			this.sortid = sortid;
		}

		public void initElements() {
		}

		public void init(FMLCommonSetupEvent event) {
		}

		public void serverLoad(FMLServerStartingEvent event) {
		}

		@OnlyIn(Dist.CLIENT)
		public void clientLoad(FMLClientSetupEvent event) {
		}

		@Override
		public int compareTo(ModElement other) {
			return this.sortid - other.sortid;
		}
	}
}
